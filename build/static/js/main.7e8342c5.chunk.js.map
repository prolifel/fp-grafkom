{"version":3,"sources":["audio/explosion.mp3","images/earth.jpg","images/moon.png","audio/laser.mp3","audio/engine.mp3","audio/engine2.mp3","audio/bg.mp3","audio/warp.mp3","audio/click.mp3","3d/Stars.js","3d/Planets.js","3d/Effects.js","audio/index.js","store.js","3d/Enemies.js","3d/Rocks.js","3d/Explosions.js","3d/Rings.js","3d/Ship.js","3d/Rig.js","Hud.js","Game.js","Menu.js","App.js","index.js"],"names":["module","exports","Stars","count","positions","useMemo","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","Float32Array","attach","attachObject","length","array","itemSize","size","sizeAttenuation","color","fog","Planets","ref","useRef","useLoader","THREE","earthImg","moonImg","texture","moon","scale","position","args","map","roughness","distance","intensity","Effects","composer","useThree","scene","gl","camera","useEffect","current","setSize","width","height","useFrame","render","attachArray","undefined","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","mp3","explosion","explosionAudio","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","bg","bgAudio","warp","warpAudio","click","clickAudio","guid","create","set","get","spline","Curves","GrannyKnot","track","cancelLaserTO","cancelExplosionTO","box","sound","points","health","lasers","explosions","rocks","randomData","enemies","mutation","t","startTime","Date","now","fov","hits","particles","looptime","binormal","normal","clock","mouse","dummy","ray","actions","init","start","toggleSound","addEffect","time","parameters","path","getPointAt","multiplyScalar","filter","test","e","a","concat","previous","playAudio","audio","updates","data","state","clearTimeout","setTimeout","rock","find","enemy","some","console","log","shoot","updateMouse","clientX","clientY","window","innerWidth","innerHeight","min","copy","offset","max","expandByScalar","hit","result","intersectBox","origin","distanceTo","useStore","api","radius","Array","fill","pos","clone","add","speed","volume","loop","getState","currentTime","play","pause","setFromCenterAndSize","glowMaterial","React","memo","gltf","GLTFLoader","getElapsedTime","rotation","material","name","__$","geometry","Rocks","Rock","key","metalness","make","createRef","normalize","Explosions","Explosion","group","forEach","type","mesh","children","vec","updateMatrix","setMatrixAt","matrix","opacity","instanceMatrix","needsUpdate","index","frustumCulled","transparent","side","lightgreen","green","hotpink","laserMaterial","crossMaterial","direction","Ship","main","laserGroup","laserLight","cross","target","getWorldPosition","getWorldDirection","negate","renderOrder","Rig","rig","segments","tangents","pickt","pick","floor","pickNext","subVectors","binormals","dir","getTangentAt","lookAt","getLength","quaternion","setFromRotationMatrix","updateProjectionMatrix","lightPos","Hud","toggle","props","useSpring","from","seconds","setInterval","innerText","toFixed","clearInterval","score","UpperLeft","onClick","UpperRight","LowerLeft","Global","LowerRight","style","h1","base","css","styled","animated","div","span","createGlobalStyle","Game","concurrent","antialias","onPointerMove","near","far","onCreated","gammaInput","toneMapping","setClearColor","fallback","Menu","number","this","setState","to","Button","variant","className","title","increment","Component","App","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e8342c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/explosion.5c5ce697.mp3\";","module.exports = __webpack_public_path__ + \"static/media/earth.7cddb76f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moon.37071536.png\";","module.exports = __webpack_public_path__ + \"static/media/laser.a97c8e67.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine.e896d081.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine2.bdb08091.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bg.a93d8e1a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warp.5699f1c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/click.8d516cce.mp3\";","import React, { useMemo } from 'react'\n\nexport default function Stars({ count = 2000 }) {\n  const positions = useMemo(() => {\n    let positions = []\n    for (let i = 0; i < count; i++) {\n      const r = 4000\n      const theta = 2 * Math.PI * Math.random()\n      const phi = Math.acos(2 * Math.random() - 1)\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\n      positions.push(x)\n      positions.push(y)\n      positions.push(z)\n    }\n    return new Float32Array(positions)\n  }, [count])\n  return (\n    <points>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />\n      </bufferGeometry>\n      <pointsMaterial attach=\"material\" size={15} sizeAttenuation color=\"white\" fog={false} />\n    </points>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport earthImg from '../images/earth.jpg'\nimport moonImg from '../images/moon.png'\n\nexport default function Planets() {\n  const ref = useRef()\n  const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\n  return (\n    <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\n      <mesh>\n        <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\n        <meshStandardMaterial attach=\"material\" map={texture} roughness={1} fog={false} />\n      </mesh>\n      <mesh position={[5, -5, -5]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[0.75, 32, 32]} />\n        <meshStandardMaterial attach=\"material\" roughness={1} map={moon} fog={false} />\n      </mesh>\n      <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\n      <mesh position={[-30, -10, -60]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[4, 32, 32]} />\n        <meshBasicMaterial attach=\"material\" color=\"#FFFF99\" fog={false} />\n        <pointLight distance={6100} intensity={50} color=\"white\" />\n      </mesh>\n    </group>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 1, 1, 0]} />\n    </effectComposer>\n  )\n}\n","import zapAudio from './laser.mp3'\nimport engineAudio from './engine.mp3'\nimport engine2Audio from './engine2.mp3'\nimport bgAudio from './bg.mp3'\nimport warpAudio from './warp.mp3'\nimport clickAudio from './click.mp3'\nimport explosionAudio from './explosion.mp3'\n\nconst mp3 = { explosion: explosionAudio }\n\nconst zap = new Audio(zapAudio)\nconst engine = new Audio(engineAudio)\nconst engine2 = new Audio(engine2Audio)\nconst bg = new Audio(bgAudio)\nconst warp = new Audio(warpAudio)\nconst click = new Audio(clickAudio)\nconst explosion = new Audio(explosionAudio)\n\nexport { zap, engine, engine2, bg, warp, click, explosion, mp3 }\n","import * as THREE from 'three'\r\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras'\r\nimport { addEffect } from 'react-three-fiber'\r\nimport create from 'zustand'\r\nimport * as audio from './audio'\r\n\r\nlet guid = 1\r\n\r\nconst [useStore, api] = create((set, get) => {\r\n  let spline = new Curves.GrannyKnot()\r\n  let track = new THREE.TubeBufferGeometry(spline, 250, 0.2, 10, true)\r\n  let cancelLaserTO = undefined\r\n  let cancelExplosionTO = undefined\r\n  const box = new THREE.Box3()\r\n  // console.log(state.health)\r\n\r\n  return {\r\n    sound: false,\r\n    camera: undefined,\r\n    points: 0,\r\n    health: 100,\r\n    lasers: [],\r\n    explosions: [],\r\n    rocks: randomData(200, track, 150, 8, () => 1 + Math.random() * 2.5),\r\n    enemies: randomData(10, track, 20, 15, 1),\r\n\r\n    mutation: {\r\n      t: 0,\r\n      position: new THREE.Vector3(),\r\n      startTime: Date.now(),\r\n\r\n      track,\r\n      scale: 15,\r\n      fov: 70,\r\n      hits: false,\r\n      // rings: randomRings(30, track),\r\n      particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\r\n      looptime: 40 * 1000,\r\n      binormal: new THREE.Vector3(),\r\n      normal: new THREE.Vector3(),\r\n      clock: new THREE.Clock(false),\r\n      mouse: new THREE.Vector2(-250, 50),\r\n\r\n      // Re-usable objects\r\n      dummy: new THREE.Object3D(),\r\n      ray: new THREE.Ray(),\r\n      box: new THREE.Box3()\r\n    },\r\n\r\n    actions: {\r\n      init(camera) {\r\n        const { mutation, actions } = get()\r\n\r\n        set({ camera })\r\n        mutation.clock.start()\r\n        actions.toggleSound(get().sound)\r\n\r\n        addEffect(() => {\r\n          const { rocks, enemies } = get()\r\n\r\n          const time = Date.now()\r\n          const t = (mutation.t = ((time - mutation.startTime) % mutation.looptime) / mutation.looptime)\r\n          mutation.position = track.parameters.path.getPointAt(t)\r\n          mutation.position.multiplyScalar(mutation.scale)\r\n\r\n          // test for wormhole/warp\r\n          // let warping = false\r\n          // if (t > 0.3 && t < 0.4) {\r\n          //   if (!warping) {\r\n          //     warping = true\r\n          //     playAudio(audio.warp)\r\n          //   }\r\n          // } else if (t > 0.5) warping = false\r\n\r\n          // test for hits\r\n          const r = rocks.filter(actions.test)\r\n          const e = enemies.filter(actions.test)\r\n          const a = r.concat(e)\r\n          const previous = mutation.hits\r\n          mutation.hits = a.length\r\n          if (previous === 0 && mutation.hits) playAudio(audio.click)\r\n          const lasers = get().lasers\r\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1] < 100) {\r\n            const updates = a.map(data => ({ time: Date.now(), ...data }))\r\n            set(state => ({ explosions: [...state.explosions, ...updates] }))\r\n            clearTimeout(cancelExplosionTO)\r\n            cancelExplosionTO = setTimeout(() => set(state => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\r\n            set(state => ({\r\n              points: state.points + r.length * 100 + e.length * 200,\r\n              rocks: state.rocks.filter(rock => !r.find(r => r.guid === rock.guid)),\r\n              enemies: state.enemies.filter(enemy => !e.find(e => e.guid === enemy.guid))\r\n            }))\r\n          }\r\n          if (a.some(data => data.distance < 15)) {\r\n            set(state => ({ health: state.health - 1 }))\r\n            if (get().health <= 0) {\r\n              // TODO: pindah ke game over\r\n              // Solve: Game Over ada di Store.js\r\n              console.log(\"MATI KON COK\")\r\n            }\r\n            // console.log(get().health)\r\n          }\r\n        })\r\n      },\r\n      shoot() {\r\n        set(state => ({ lasers: [...state.lasers, Date.now()] }))\r\n        clearTimeout(cancelLaserTO)\r\n        cancelLaserTO = setTimeout(() => set(state => ({ lasers: state.lasers.filter(t => Date.now() - t <= 1000) })), 1000)\r\n        playAudio(audio.zap, 0.5)\r\n      },\r\n      toggleSound(sound = !get().sound) {\r\n        set({ sound })\r\n        playAudio(audio.engine, 1, true)\r\n        playAudio(audio.engine2, 0.3, true)\r\n        playAudio(audio.bg, 1, true)\r\n      },\r\n      updateMouse({ clientX: x, clientY: y }) {\r\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\r\n      },\r\n      test(data) {\r\n        box.min.copy(data.offset)\r\n        box.max.copy(data.offset)\r\n        box.expandByScalar(data.size * data.scale)\r\n        data.hit.set(10000, 10000, 10000)\r\n        const result = get().mutation.ray.intersectBox(box, data.hit)\r\n        data.distance = get().mutation.ray.origin.distanceTo(data.hit)\r\n        return result\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nfunction randomData(count, track, radius, size, scale) {\r\n  return new Array(count).fill().map(() => {\r\n    const t = Math.random()\r\n    const pos = track.parameters.path.getPointAt(t)\r\n    pos.multiplyScalar(15)\r\n    const offset = pos\r\n      .clone()\r\n      .add(new THREE.Vector3(-radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2))\r\n    const speed = 0.1 + Math.random()\r\n    return { guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\r\n  })\r\n}\r\n\r\n// function randomRings(count, track) {\r\n//   let temp = []\r\n//   let t = 0.4\r\n//   for (let i = 0; i < count; i++) {\r\n//     t += 0.003\r\n//     const pos = track.parameters.path.getPointAt(t)\r\n//     pos.multiplyScalar(15)\r\n//     const segments = track.tangents.length\r\n//     const pickt = t * segments\r\n//     const pick = Math.floor(pickt)\r\n//     const lookAt = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(15)\r\n//     const matrix = new THREE.Matrix4().lookAt(pos, lookAt, track.binormals[pick])\r\n//     temp.push([pos.toArray(), matrix])\r\n//   }\r\n//   return temp\r\n// }\r\n\r\nfunction playAudio(audio, volume = 1, loop = false) {\r\n  if (api.getState().sound) {\r\n    audio.currentTime = 0\r\n    audio.volume = volume\r\n    audio.loop = loop\r\n    audio.play()\r\n  } else audio.pause()\r\n}\r\n\r\nexport default useStore\r\nexport { audio, playAudio }\r\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Enemies() {\n  const enemies = useStore(state => state.enemies)\n  return enemies.map((data, i) => <Drone key={i} data={data} />)\n}\n\nconst box = new THREE.Box3()\nbox.setFromCenterAndSize(new THREE.Vector3(0, 0, 1), new THREE.Vector3(3, 3, 3))\nconst glowMaterial = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\n\nconst Drone = React.memo(({ data }) => {\n  const { clock } = useStore(state => state.mutation)\n  const gltf = useLoader(GLTFLoader, '/drone.gltf')\n  const ref = useRef()\n\n  useFrame(() => {\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n    ref.current.position.copy(data.offset)\n    ref.current.rotation.set(r, r, r)\n  })\n\n  return (\n    <group ref={ref} scale={[5, 5, 5]}>\n      <mesh position={[0, 0, 50]} rotation={[Math.PI / 2, 0, 0]} material={glowMaterial}>\n        <cylinderBufferGeometry attach=\"geometry\" args={[0.25, 0.25, 100, 4]} />\n      </mesh>\n      <mesh name=\"Sphere_DroneGlowmat_0\">\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} name=\"DroneGlowmat\" />\n      </mesh>\n      <mesh name=\"Sphere_Body_0\" material={glowMaterial}>\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[8].material} name=\"Body\" />\n      </mesh>\n    </group>\n  )\n})\n","import React, { useRef } from 'react'\r\nimport { useFrame, useLoader } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport useStore from '../store'\r\n\r\nexport default function Rocks() {\r\n  const gltf = useLoader(GLTFLoader, '/virus.gltf')\r\n  const rocks = useStore(state => state.rocks)\r\n  return rocks.map(data => <Rock gltf={gltf} key={data.guid} data={data} />)\r\n}\r\n\r\nconst Rock = React.memo(({ gltf, data }) => {\r\n  const ref = useRef()\r\n  const { clock } = useStore(state => state.mutation)\r\n  useFrame(() => {\r\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\r\n    ref.current.rotation.set(r, r, r)\r\n  })\r\n  return (\r\n    <group ref={ref} position={data.offset} scale={[data.scale, data.scale, data.scale]}>\r\n      <object3D\r\n        position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\r\n        rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\r\n        scale={[5, 5, 5]}>\r\n        <mesh>\r\n          <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\r\n          <meshStandardMaterial attach=\"material\" roughness={1} metalness={1} color=\"indianred\" />\r\n        </mesh>\r\n      </object3D>\r\n    </group>\r\n  )\r\n})\r\n","import * as THREE from 'three'\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport useStore, { audio, playAudio } from '../store'\n\nfunction make(color, speed) {\n  return {\n    ref: React.createRef(),\n    color,\n    data: new Array(20)\n      .fill()\n      .map(() => [\n        new THREE.Vector3(),\n        new THREE.Vector3(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2).normalize().multiplyScalar(speed * 0.75)\n      ])\n  }\n}\n\nexport default function Explosions() {\n  const explosions = useStore(state => state.explosions)\n  return explosions.map(({ guid, offset, scale }) => <Explosion key={guid} position={offset} scale={scale * 0.75} />)\n}\n\nfunction Explosion({ position, scale }) {\n  const group = useRef()\n  const { dummy } = useStore(state => state.mutation)\n  const particles = useMemo(() => [make('white', 0.8), make('orange', 0.6)], [])\n\n  useEffect(() => void playAudio(new Audio(audio.mp3.explosion), 0.5), [])\n\n  useFrame(() => {\n    particles.forEach(({ data }, type) => {\n      const mesh = group.current.children[type]\n      data.forEach(([vec, normal], i) => {\n        vec.add(normal)\n        dummy.position.copy(vec)\n        dummy.updateMatrix()\n        mesh.setMatrixAt(i, dummy.matrix)\n      })\n      mesh.material.opacity -= 0.025\n      mesh.instanceMatrix.needsUpdate = true\n    })\n  })\n\n  return (\n    <group ref={group} position={position} scale={[scale, scale, scale]}>\n      {particles.map(({ color, data }, index) => (\n        <instancedMesh key={index} args={[null, null, data.length]} frustumCulled={false}>\n          <dodecahedronBufferGeometry attach=\"geometry\" args={[10, 0]} />\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={1} fog={false} />\n        </instancedMesh>\n      ))}\n    </group>\n  )\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.RingBufferGeometry(1, 1.01, 64)\nconst material = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightgreen'), side: THREE.DoubleSide })\n\nexport default function Rings() {\n  const { rings } = useStore(state => state.mutation)\n  return rings.map(([pos, matrix], i) => {\n    const f = (Math.sin(i / 10) * Math.PI) / 2\n    return (\n      <mesh\n        key={i}\n        position={pos}\n        scale={[30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f]}\n        onUpdate={self => self.quaternion.setFromRotationMatrix(matrix)}\n        geometry={geometry}\n        material={material}\n      />\n    )\n  })\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst green = new THREE.Color('green')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n  const gltf = useLoader(GLTFLoader, '/ship.gltf')\n  const mutation = useStore(state => state.mutation)\n  const { clock, mouse, ray } = mutation\n  const lasers = useStore(state => state.lasers)\n  const main = useRef()\n  const laserGroup = useRef()\n  const laserLight = useRef()\n  const exhaust = useRef()\n  const cross = useRef()\n  const target = useRef()\n\n  useFrame(() => {\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.1\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.1\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1\n    // exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    // exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.1\n\n    // Get ships orientation and save it to the stores ray\n    main.current.getWorldPosition(position)\n    main.current.getWorldDirection(direction)\n    // biar bisa hit virus\n    ray.origin.copy(position)\n    ray.direction.copy(direction.negate())\n\n    // ...\n    crossMaterial.color = mutation.hits ? green : hotpink\n    // cross.current.visible = !mutation.hits\n    // target.current.visible = !!mutation.hits\n  })\n\n  return (\n    <group ref={main}>\n      <group scale={[3.5, 3.5, 3.5]}>\n        <group ref={cross} position={[0, 0, -300]} name=\"cross\">\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[20, 2, 2]} />\n          </mesh>\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 20, 2]} />\n          </mesh>\n        </group>\n        <group ref={target} position={[0, 0, -300]} name=\"target\">\n          <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n          </mesh>\n          <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n          </mesh>\n        </group>\n        <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\n        <group ref={laserGroup}>\n          {lasers.map((t, i) => (\n            <group key={i}>\n              <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n              <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n            </group>\n          ))}\n        </group>\n        <group rotation={[Math.PI / 2, Math.PI, 0]}>\n          <mesh name=\"Renault_(S,_T1)_0\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_1\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"black\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_2\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_3\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_4\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"white\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_5\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"teal\" />\n          </mesh>\n        </group>\n      </group>\n      {/* <mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[1.5, 0]} />\n        <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n      </mesh> */}\n    </group>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useThree, useFrame } from 'react-three-fiber'\nimport useStore from '../store'\n\nlet offset = 0\nexport default function Rig({ children }) {\n  const group = useRef()\n  const rig = useRef()\n  const mutation = useStore(state => state.mutation)\n  const { fov, scale, binormal, normal, track, mouse } = mutation\n  const { camera } = useThree()\n\n  useFrame(() => {\n    const t = mutation.t\n    const pos = mutation.position.clone()\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const pickNext = (pick + 1) % segments\n    binormal.subVectors(track.binormals[pickNext], track.binormals[pick])\n    binormal.multiplyScalar(pickt - pick).add(track.binormals[pick])\n    const dir = track.parameters.path.getTangentAt(t)\n    offset += (Math.max(15, 15 + -mouse.y / 20) - offset) * 0.05\n    normal.copy(binormal).cross(dir)\n    pos.add(normal.clone().multiplyScalar(offset))\n    camera.position.copy(pos)\n    const lookAt = track.parameters.path.getPointAt((t + 30 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    camera.matrix.lookAt(camera.position, lookAt, normal)\n    camera.quaternion.setFromRotationMatrix(camera.matrix)\n    camera.fov += ((fov) - camera.fov) * 0.05\n    camera.updateProjectionMatrix()\n    const lightPos = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    group.current.position.copy(lightPos)\n    group.current.quaternion.setFromRotationMatrix(camera.matrix)\n  })\n\n  return (\n    <group ref={group}>\n      <pointLight distance={400} position={[0, 100, -420]} intensity={5} color=\"indianred\" />\n      <group ref={rig} position={[0, 0, -50]}>\n        {children}\n      </group>\n    </group>\n  )\n}\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport styled, { css, createGlobalStyle } from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport useStore from './store'\n\nexport default function Hud() {\n  const points = useStore(state => state.points)\n  const health = useStore(state => state.health)\n  const sound = useStore(state => state.sound)\n  const toggle = useStore(state => state.actions.toggleSound)\n  const props = useSpring({\n    opacity: 1,\n    from: { opacity: 0 },\n  })\n\n  const seconds = useRef()\n  useEffect(() => {\n    const t = Date.now()\n    const i = setInterval(() => (seconds.current.innerText = ((Date.now() - t) / 1000).toFixed(1)), 100)\n    return () => clearInterval(i)\n  }, [])\n\n  const score = useMemo(() => (points >= 1000 ? (points / 1000).toFixed(1) + 'K' : points), [points])\n  return (\n    <>\n      <UpperLeft onClick={() => toggle()}>\n        {/* sound\n        <br />\n        {sound ? 'off' : 'on'} */}\n      </UpperLeft>\n      <UpperRight>\n        {/* <a href=\"https://codesandbox.io/s/react-three-fiber-untitled-game-4pp5r\">source</a>\n        <br />\n        <a href=\"https://twitter.com/0xca0a\">twitter</a>\n        <br />\n        <a href=\"https://github.com/react-spring/react-three-fiber\">github</a> */}\n      </UpperRight>\n      <LowerLeft>\n        <h2 ref={seconds}>\n          0.0\n        </h2>\n        <h1>Skor: {score}</h1>\n      </LowerLeft>\n      <Global />\n      <LowerRight>\n        {health > 90 &&\n          <>\n            <div style={{ width: health + '%' }} />\n          </>\n        }\n      </LowerRight>\n      {health <= 90 &&\n        <>\n          {/* TODO: buat HTML Game Over */}\n          <animated.h1 style={props}>hello</animated.h1>\n        </>\n      }\n    </>\n  )\n}\n\nconst base = css`\n  font-family: 'Teko', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: indianred;\n`\n\nconst Gameover = styled(animated.div)`\n  font-family: 'Teko', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: indianred;\n  top: 40px;\n  left: 500px;\n`\n\nconst UpperLeft = styled.div`\n  ${base}\n  top: 40px;\n  left: 50px;\n  font-size: 2em;\n  transform: skew(5deg, 10deg);\n  pointer-events: all;\n  cursor: pointer;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperRight = styled.div`\n  ${base}\n  text-align: right;\n  top: 40px;\n  right: 50px;\n  font-size: 2em;\n  transform: skew(-5deg, -10deg);\n  pointer-events: all;\n  cursor: pointer;\n  & > a {\n    color: indianred;\n    text-decoration: none;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst LowerLeft = styled.span`\n  ${base}\n  top: 50px;\n  left: 50px;\n  width: 500px;\n  display: inline-block;\n  & > h1 {\n    margin: 0;\n    font-size: 3em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 2em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 1em !important;\n    }\n    & > h2 {\n      font-size: 0.5em !important;\n    }\n  }\n`\n\nconst test = styled.span`\n  ${base}\n  top: 50px;\n  left: 500px;\n  width: 500px;\n  display: inline-block;\n  & > h1 {\n    margin: 0;\n    font-size: 3em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 2em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 1em !important;\n    }\n    & > h2 {\n      font-size: 0.5em !important;\n    }\n  }\n`\n\nconst LowerRight = styled.div`\n  position: absolute;\n  pointer-events: none;\n  bottom: 70px;\n  right: 50px;\n  height: 40px;\n  width: 200px;\n  background: black;\n  & > div {\n    height: 100%;\n    background: rgb(90,255,98);\n    background: linear-gradient(-90deg, rgba(90,255,98,1) 0%, rgba(45,175,49,1) 100%);\n  }\n\n  @media only screen and (max-width: 900px) {\n    bottom: 50px;\n    height: 40px;\n    width: 150px;\n  }\n`\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow: auto;\n    padding: 0px;\n  }\n\n  body {\n    position: fixed;\n    overflow: hidden;\n    overscroll-behavior-y: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n    color: black;\n    background: white;\n  }\n`\n","import * as THREE from 'three'\r\nimport React, { Suspense } from 'react'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport Stars from './3d/Stars'\r\nimport Planets from './3d/Planets'\r\nimport Effects from './3d/Effects'\r\nimport Particles from './3d/Particles'\r\nimport Enemies from './3d/Enemies'\r\nimport Rocks from './3d/Rocks'\r\nimport Explosions from './3d/Explosions'\r\nimport Rings from './3d/Rings'\r\nimport Track from './3d/Track'\r\nimport Ship from './3d/Ship'\r\nimport Rig from './3d/Rig'\r\nimport Hud from './Hud'\r\nimport useStore from './store'\r\n\r\nexport default function Game() {\r\n  const { fov } = useStore(state => state.mutation)\r\n  const actions = useStore(state => state.actions)\r\n  return (\r\n    <>\r\n      <Canvas\r\n        concurrent\r\n        gl={{ antialias: false }}\r\n        onPointerMove={actions.updateMouse}\r\n        onClick={actions.shoot}\r\n        camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, fov }}\r\n        onCreated={({ gl, camera }) => {\r\n          actions.init(camera)\r\n          gl.gammaInput = true\r\n          gl.toneMapping = THREE.Uncharted2ToneMapping\r\n          gl.setClearColor(new THREE.Color('#020209'))\r\n        }}>\r\n        <fog attach=\"fog\" args={['#070710', 100, 700]} />\r\n        <ambientLight intensity={0.25} />\r\n        <Stars />\r\n        <Explosions />\r\n        {/* <Track /> */}\r\n        {/* <Particles /> */}\r\n        {/* <Rings /> */}\r\n        <Suspense fallback={null}>\r\n          <Rocks />\r\n          <Planets />\r\n          {/* <Enemies /> */}\r\n          <Rig>\r\n            <Ship />\r\n          </Rig>\r\n        </Suspense>\r\n        <Effects />\r\n      </Canvas>\r\n      <Hud />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// TODO: Buat menu cokkkkk!\r\n\r\nclass Menu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            number : 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        this.setState({\r\n            number: this.state.number+1\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Link to=\"/Game\">\r\n                    <Button variant=\"primary\" className=\"m-4\" size=\"lg\">\r\n                        {this.props.title}\r\n                    </Button>\r\n                </Link>\r\n                <Button variant=\"secondary\" onClick={ ()=>this.increment() }>\r\n                    {this.state.number}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react'\nimport Game from './Game';\nimport Menu from './Menu';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={\"/\"} component={()=><Menu title=\"ngewe\"/>} />\n        <Route exact path={\"/game\"} component={Game} />\n      </Switch>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
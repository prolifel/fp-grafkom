{"version":3,"sources":["3d/Stars.js","images/earth.jpg","images/moon.png","3d/Planets.js","3d/Effects.js","audio/laser.mp3","audio/engine.mp3","audio/engine2.mp3","audio/bg.mp3","audio/warp.mp3","audio/click.mp3","audio/explosion.mp3","audio/index.js","store.js","3d/Enemies.js","3d/Rocks.js","3d/Explosions.js","3d/Rings.js","3d/Ship.js","3d/Rig.js","Hud.js","Game.js","images/corona.png","Menu.js","App.js","index.js"],"names":["Stars","count","positions","useMemo","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","Float32Array","attach","attachObject","length","array","itemSize","size","sizeAttenuation","color","fog","Planets","ref","useRef","useLoader","THREE","earthImg","moonImg","texture","moon","scale","position","args","map","roughness","distance","intensity","Effects","composer","useThree","scene","gl","camera","useEffect","current","setSize","width","height","useFrame","render","attachArray","undefined","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","mp3","explosion","explosionAudio","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","bg","bgAudio","warp","warpAudio","click","clickAudio","guid","create","set","get","cancelLaserTO","cancelExplosionTO","spline","Curves","GrannyKnot","track","box","sound","points","health","lasers","explosions","rocks","randomData","enemies","mutation","t","startTime","Date","now","fov","hits","particles","looptime","binormal","normal","clock","mouse","dummy","ray","actions","init","start","toggleSound","addEffect","time","parameters","path","getPointAt","multiplyScalar","filter","test","e","a","concat","previous","playAudio","audio","updates","data","state","clearTimeout","setTimeout","rock","find","enemy","some","console","log","shoot","updateMouse","clientX","clientY","window","innerWidth","innerHeight","min","copy","offset","max","expandByScalar","hit","result","intersectBox","origin","distanceTo","useStore","api","radius","Array","fill","pos","clone","add","speed","volume","loop","getState","currentTime","play","pause","setFromCenterAndSize","Rocks","gltf","GLTFLoader","Rock","key","React","memo","getElapsedTime","rotation","__$","geometry","metalness","make","createRef","normalize","Explosions","Explosion","group","forEach","type","mesh","children","vec","updateMatrix","setMatrixAt","matrix","material","opacity","instanceMatrix","needsUpdate","index","frustumCulled","transparent","side","lightgreen","green","hotpink","laserMaterial","crossMaterial","direction","Ship","main","laserGroup","laserLight","cross","target","getWorldPosition","getWorldDirection","negate","name","renderOrder","Rig","rig","segments","tangents","pickt","pick","floor","pickNext","subVectors","binormals","dir","getTangentAt","lookAt","getLength","quaternion","setFromRotationMatrix","updateProjectionMatrix","lightPos","Hud","toggle","anim","useSpring","from","score","toFixed","UpperRight","onClick","LowerLeft","Global","LowerRight","style","div","Gameover","base","css","styled","span","createGlobalStyle","Game","concurrent","antialias","onPointerMove","near","far","onCreated","gammaInput","toneMapping","setClearColor","fallback","Menu","Component","constructor","props","super","openModal","this","setState","isOpen","closeModal","number","increment","class","src","logo","to","Button","variant","className","title","Modal","show","onHide","Header","closeButton","Title","Body","Footer","App","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.428ed09f.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nexport default function Stars({ count = 2000 }) {\r\n  const positions = useMemo(() => {\r\n    let positions = []\r\n    for (let i = 0; i < count; i++) {\r\n      const r = 4000\r\n      const theta = 2 * Math.PI * Math.random()\r\n      const phi = Math.acos(2 * Math.random() - 1)\r\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\r\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\r\n      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\r\n      positions.push(x)\r\n      positions.push(y)\r\n      positions.push(z)\r\n    }\r\n    return new Float32Array(positions)\r\n  }, [count])\r\n  return (\r\n    <points>\r\n      <bufferGeometry attach=\"geometry\">\r\n        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />\r\n      </bufferGeometry>\r\n      <pointsMaterial attach=\"material\" size={15} sizeAttenuation color=\"white\" fog={false} />\r\n    </points>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/earth.45ed3b77.jpg\";","export default __webpack_public_path__ + \"static/media/moon.27019542.png\";","import * as THREE from 'three'\r\nimport React, { useRef } from 'react'\r\nimport { useLoader } from 'react-three-fiber'\r\nimport earthImg from '../images/earth.jpg'\r\nimport moonImg from '../images/moon.png'\r\n\r\nexport default function Planets() {\r\n  const ref = useRef()\r\n  const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\r\n  return (\r\n    <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\r\n      <mesh>\r\n        <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\r\n        <meshStandardMaterial attach=\"material\" map={texture} roughness={1} fog={false} />\r\n      </mesh>\r\n      <mesh position={[5, -5, -5]}>\r\n        <sphereBufferGeometry attach=\"geometry\" args={[0.75, 32, 32]} />\r\n        <meshStandardMaterial attach=\"material\" roughness={1} map={moon} fog={false} />\r\n      </mesh>\r\n      <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\r\n      <mesh position={[-30, -10, -60]}>\r\n        <sphereBufferGeometry attach=\"geometry\" args={[4, 32, 32]} />\r\n        <meshBasicMaterial attach=\"material\" color=\"#FFFF99\" fog={false} />\r\n        <pointLight distance={6100} intensity={50} color=\"white\" />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { extend, useThree, useFrame } from 'react-three-fiber'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\r\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\r\n\r\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\r\n\r\nexport default function Effects() {\r\n  const composer = useRef()\r\n  const { scene, gl, size, camera } = useThree()\r\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\r\n  useFrame(() => composer.current.render(), 2)\r\n  return (\r\n    <effectComposer ref={composer} args={[gl]}>\r\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\r\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 1, 1, 0]} />\r\n    </effectComposer>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/laser.373d639d.mp3\";","export default __webpack_public_path__ + \"static/media/engine.75bbe12e.mp3\";","export default __webpack_public_path__ + \"static/media/engine2.87c3c40a.mp3\";","export default __webpack_public_path__ + \"static/media/bg.898c3fe7.mp3\";","export default __webpack_public_path__ + \"static/media/warp.1f9bec85.mp3\";","export default __webpack_public_path__ + \"static/media/click.db461987.mp3\";","export default __webpack_public_path__ + \"static/media/explosion.615cfd43.mp3\";","import zapAudio from './laser.mp3'\r\nimport engineAudio from './engine.mp3'\r\nimport engine2Audio from './engine2.mp3'\r\nimport bgAudio from './bg.mp3'\r\nimport warpAudio from './warp.mp3'\r\nimport clickAudio from './click.mp3'\r\nimport explosionAudio from './explosion.mp3'\r\n\r\nconst mp3 = { explosion: explosionAudio }\r\n\r\nconst zap = new Audio(zapAudio)\r\nconst engine = new Audio(engineAudio)\r\nconst engine2 = new Audio(engine2Audio)\r\nconst bg = new Audio(bgAudio)\r\nconst warp = new Audio(warpAudio)\r\nconst click = new Audio(clickAudio)\r\nconst explosion = new Audio(explosionAudio)\r\n\r\nexport { zap, engine, engine2, bg, warp, click, explosion, mp3 }\r\n","import * as THREE from 'three'\r\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras'\r\nimport { addEffect } from 'react-three-fiber'\r\nimport create from 'zustand'\r\nimport * as audio from './audio'\r\n\r\nlet guid = 1\r\n\r\nconst [useStore, api] = create((set, get) => {\r\n  let spline = new Curves.GrannyKnot()\r\n  let track = new THREE.TubeBufferGeometry(spline, 250, 0.2, 10, true)\r\n  let cancelLaserTO = undefined\r\n  let cancelExplosionTO = undefined\r\n  const box = new THREE.Box3()\r\n  // console.log(state.health)\r\n\r\n  return {\r\n    sound: false,\r\n    camera: undefined,\r\n    points: 0,\r\n    health: 100,\r\n    lasers: [],\r\n    explosions: [],\r\n    rocks: randomData(200, track, 150, 8, () => 1 + Math.random() * 2.5),\r\n    enemies: randomData(10, track, 20, 15, 1),\r\n\r\n    mutation: {\r\n      t: 0,\r\n      position: new THREE.Vector3(),\r\n      startTime: Date.now(),\r\n\r\n      track,\r\n      scale: 15,\r\n      fov: 70,\r\n      hits: false,\r\n      // rings: randomRings(30, track),\r\n      particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\r\n      looptime: 40 * 1000,\r\n      binormal: new THREE.Vector3(),\r\n      normal: new THREE.Vector3(),\r\n      clock: new THREE.Clock(false),\r\n      mouse: new THREE.Vector2(-250, 50),\r\n\r\n      // Re-usable objects\r\n      dummy: new THREE.Object3D(),\r\n      ray: new THREE.Ray(),\r\n      box: new THREE.Box3()\r\n    },\r\n\r\n    actions: {\r\n      init(camera) {\r\n        const { mutation, actions } = get()\r\n\r\n        set({ camera })\r\n        mutation.clock.start()\r\n        actions.toggleSound(get().sound)\r\n\r\n        addEffect(() => {\r\n          const { rocks, enemies } = get()\r\n\r\n          const time = Date.now()\r\n          const t = (mutation.t = ((time - mutation.startTime) % mutation.looptime) / mutation.looptime)\r\n          mutation.position = track.parameters.path.getPointAt(t)\r\n          mutation.position.multiplyScalar(mutation.scale)\r\n\r\n          // test for wormhole/warp\r\n          // let warping = false\r\n          // if (t > 0.3 && t < 0.4) {\r\n          //   if (!warping) {\r\n          //     warping = true\r\n          //     playAudio(audio.warp)\r\n          //   }\r\n          // } else if (t > 0.5) warping = false\r\n\r\n          // test for hits\r\n          const r = rocks.filter(actions.test)\r\n          const e = enemies.filter(actions.test)\r\n          const a = r.concat(e)\r\n          const previous = mutation.hits\r\n          mutation.hits = a.length\r\n          if (previous === 0 && mutation.hits) playAudio(audio.click)\r\n          const lasers = get().lasers\r\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1] < 100) {\r\n            const updates = a.map(data => ({ time: Date.now(), ...data }))\r\n            set(state => ({ explosions: [...state.explosions, ...updates] }))\r\n            clearTimeout(cancelExplosionTO)\r\n            cancelExplosionTO = setTimeout(() => set(state => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\r\n            set(state => ({\r\n              points: state.points + r.length * 100 + e.length * 200,\r\n              rocks: state.rocks.filter(rock => !r.find(r => r.guid === rock.guid)),\r\n              enemies: state.enemies.filter(enemy => !e.find(e => e.guid === enemy.guid))\r\n            }))\r\n          }\r\n          if (a.some(data => data.distance < 15)) {\r\n            set(state => ({ health: state.health - 1 }))\r\n            if (get().health <= 0) {\r\n              // TODO: pindah ke game over\r\n              // Solve: Game Over ada di Store.js\r\n              console.log(\"MATI KON COK\")\r\n            }\r\n            // console.log(get().health)\r\n          }\r\n        })\r\n      },\r\n      shoot() {\r\n        set(state => ({ lasers: [...state.lasers, Date.now()] }))\r\n        clearTimeout(cancelLaserTO)\r\n        cancelLaserTO = setTimeout(() => set(state => ({ lasers: state.lasers.filter(t => Date.now() - t <= 1000) })), 1000)\r\n        playAudio(audio.zap, 0.5)\r\n      },\r\n      toggleSound(sound = !get().sound) {\r\n        set({ sound })\r\n        playAudio(audio.engine, 1, true)\r\n        playAudio(audio.engine2, 0.3, true)\r\n        playAudio(audio.bg, 1, true)\r\n      },\r\n      updateMouse({ clientX: x, clientY: y }) {\r\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\r\n      },\r\n      test(data) {\r\n        box.min.copy(data.offset)\r\n        box.max.copy(data.offset)\r\n        box.expandByScalar(data.size * data.scale)\r\n        data.hit.set(10000, 10000, 10000)\r\n        const result = get().mutation.ray.intersectBox(box, data.hit)\r\n        data.distance = get().mutation.ray.origin.distanceTo(data.hit)\r\n        return result\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nfunction randomData(count, track, radius, size, scale) {\r\n  return new Array(count).fill().map(() => {\r\n    const t = Math.random()\r\n    const pos = track.parameters.path.getPointAt(t)\r\n    pos.multiplyScalar(15)\r\n    const offset = pos\r\n      .clone()\r\n      .add(new THREE.Vector3(-radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2))\r\n    const speed = 0.1 + Math.random()\r\n    return { guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\r\n  })\r\n}\r\n\r\n// function randomRings(count, track) {\r\n//   let temp = []\r\n//   let t = 0.4\r\n//   for (let i = 0; i < count; i++) {\r\n//     t += 0.003\r\n//     const pos = track.parameters.path.getPointAt(t)\r\n//     pos.multiplyScalar(15)\r\n//     const segments = track.tangents.length\r\n//     const pickt = t * segments\r\n//     const pick = Math.floor(pickt)\r\n//     const lookAt = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(15)\r\n//     const matrix = new THREE.Matrix4().lookAt(pos, lookAt, track.binormals[pick])\r\n//     temp.push([pos.toArray(), matrix])\r\n//   }\r\n//   return temp\r\n// }\r\n\r\nfunction playAudio(audio, volume = 1, loop = false) {\r\n  if (api.getState().sound) {\r\n    audio.currentTime = 0\r\n    audio.volume = volume\r\n    audio.loop = loop\r\n    audio.play()\r\n  } else audio.pause()\r\n}\r\n\r\nexport default useStore\r\nexport { audio, playAudio }\r\n","import * as THREE from 'three'\r\nimport React, { useRef } from 'react'\r\nimport { useLoader, useFrame } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport useStore from '../store'\r\n\r\nexport default function Enemies() {\r\n  const enemies = useStore(state => state.enemies)\r\n  return enemies.map((data, i) => <Drone key={i} data={data} />)\r\n}\r\n\r\nconst box = new THREE.Box3()\r\nbox.setFromCenterAndSize(new THREE.Vector3(0, 0, 1), new THREE.Vector3(3, 3, 3))\r\nconst glowMaterial = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\r\n\r\nconst Drone = React.memo(({ data }) => {\r\n  const { clock } = useStore(state => state.mutation)\r\n  const gltf = useLoader(GLTFLoader, '/drone.gltf')\r\n  const ref = useRef()\r\n\r\n  useFrame(() => {\r\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\r\n    ref.current.position.copy(data.offset)\r\n    ref.current.rotation.set(r, r, r)\r\n  })\r\n\r\n  return (\r\n    <group ref={ref} scale={[5, 5, 5]}>\r\n      <mesh position={[0, 0, 50]} rotation={[Math.PI / 2, 0, 0]} material={glowMaterial}>\r\n        <cylinderBufferGeometry attach=\"geometry\" args={[0.25, 0.25, 100, 4]} />\r\n      </mesh>\r\n      <mesh name=\"Sphere_DroneGlowmat_0\">\r\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\r\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} name=\"DroneGlowmat\" />\r\n      </mesh>\r\n      <mesh name=\"Sphere_Body_0\" material={glowMaterial}>\r\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\r\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[8].material} name=\"Body\" />\r\n      </mesh>\r\n    </group>\r\n  )\r\n})\r\n","import React, { useRef } from 'react'\r\nimport { useFrame, useLoader } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport useStore from '../store'\r\n\r\nexport default function Rocks() {\r\n  const gltf = useLoader(GLTFLoader, '/virus.gltf')\r\n  const rocks = useStore(state => state.rocks)\r\n  return rocks.map(data => <Rock gltf={gltf} key={data.guid} data={data} />)\r\n}\r\n\r\nconst Rock = React.memo(({ gltf, data }) => {\r\n  const ref = useRef()\r\n  const { clock } = useStore(state => state.mutation)\r\n  useFrame(() => {\r\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\r\n    ref.current.rotation.set(r, r, r)\r\n  })\r\n  return (\r\n    <group ref={ref} position={data.offset} scale={[data.scale, data.scale, data.scale]}>\r\n      <object3D\r\n        position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\r\n        rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\r\n        scale={[5, 5, 5]}>\r\n        <mesh>\r\n          <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\r\n          <meshStandardMaterial attach=\"material\" roughness={1} metalness={1} color=\"indianred\" />\r\n        </mesh>\r\n      </object3D>\r\n    </group>\r\n  )\r\n})\r\n","import * as THREE from 'three'\r\nimport React, { useRef, useMemo, useEffect } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport useStore, { audio, playAudio } from '../store'\r\n\r\nfunction make(color, speed) {\r\n  return {\r\n    ref: React.createRef(),\r\n    color,\r\n    data: new Array(20)\r\n      .fill()\r\n      .map(() => [\r\n        new THREE.Vector3(),\r\n        new THREE.Vector3(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2).normalize().multiplyScalar(speed * 0.75)\r\n      ])\r\n  }\r\n}\r\n\r\nexport default function Explosions() {\r\n  const explosions = useStore(state => state.explosions)\r\n  return explosions.map(({ guid, offset, scale }) => <Explosion key={guid} position={offset} scale={scale * 0.75} />)\r\n}\r\n\r\nfunction Explosion({ position, scale }) {\r\n  const group = useRef()\r\n  const { dummy } = useStore(state => state.mutation)\r\n  const particles = useMemo(() => [make('white', 0.8), make('orange', 0.6)], [])\r\n\r\n  useEffect(() => void playAudio(new Audio(audio.mp3.explosion), 0.5), [])\r\n\r\n  useFrame(() => {\r\n    particles.forEach(({ data }, type) => {\r\n      const mesh = group.current.children[type]\r\n      data.forEach(([vec, normal], i) => {\r\n        vec.add(normal)\r\n        dummy.position.copy(vec)\r\n        dummy.updateMatrix()\r\n        mesh.setMatrixAt(i, dummy.matrix)\r\n      })\r\n      mesh.material.opacity -= 0.025\r\n      mesh.instanceMatrix.needsUpdate = true\r\n    })\r\n  })\r\n\r\n  return (\r\n    <group ref={group} position={position} scale={[scale, scale, scale]}>\r\n      {particles.map(({ color, data }, index) => (\r\n        <instancedMesh key={index} args={[null, null, data.length]} frustumCulled={false}>\r\n          <dodecahedronBufferGeometry attach=\"geometry\" args={[10, 0]} />\r\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={1} fog={false} />\r\n        </instancedMesh>\r\n      ))}\r\n    </group>\r\n  )\r\n}\r\n","import * as THREE from 'three'\r\nimport React from 'react'\r\nimport useStore from '../store'\r\n\r\nconst geometry = new THREE.RingBufferGeometry(1, 1.01, 64)\r\nconst material = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightgreen'), side: THREE.DoubleSide })\r\n\r\nexport default function Rings() {\r\n  const { rings } = useStore(state => state.mutation)\r\n  return rings.map(([pos, matrix], i) => {\r\n    const f = (Math.sin(i / 10) * Math.PI) / 2\r\n    return (\r\n      <mesh\r\n        key={i}\r\n        position={pos}\r\n        scale={[30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f]}\r\n        onUpdate={self => self.quaternion.setFromRotationMatrix(matrix)}\r\n        geometry={geometry}\r\n        material={material}\r\n      />\r\n    )\r\n  })\r\n}\r\n","import * as THREE from 'three'\r\nimport React, { useRef } from 'react'\r\nimport { useLoader, useFrame } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport useStore from '../store'\r\n\r\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\r\nconst lightgreen = new THREE.Color('lightgreen')\r\nconst green = new THREE.Color('green')\r\nconst hotpink = new THREE.Color('hotpink')\r\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\r\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\r\nconst position = new THREE.Vector3()\r\nconst direction = new THREE.Vector3()\r\n\r\nexport default function Ship() {\r\n  const gltf = useLoader(GLTFLoader, '/ship.gltf')\r\n  const mutation = useStore(state => state.mutation)\r\n  const { clock, mouse, ray } = mutation\r\n  const lasers = useStore(state => state.lasers)\r\n  const main = useRef()\r\n  const laserGroup = useRef()\r\n  const laserLight = useRef()\r\n  const exhaust = useRef()\r\n  const cross = useRef()\r\n  const target = useRef()\r\n\r\n  useFrame(() => {\r\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.1\r\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.1\r\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1\r\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1\r\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1\r\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1\r\n    // exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\r\n    // exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\r\n    for (let i = 0; i < lasers.length; i++) {\r\n      const group = laserGroup.current.children[i]\r\n      group.position.z -= 20\r\n    }\r\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.1\r\n\r\n    // Get ships orientation and save it to the stores ray\r\n    main.current.getWorldPosition(position)\r\n    main.current.getWorldDirection(direction)\r\n    // biar bisa hit virus\r\n    ray.origin.copy(position)\r\n    ray.direction.copy(direction.negate())\r\n\r\n    // ...\r\n    crossMaterial.color = mutation.hits ? green : hotpink\r\n    // cross.current.visible = !mutation.hits\r\n    // target.current.visible = !!mutation.hits\r\n  })\r\n\r\n  return (\r\n    <group ref={main}>\r\n      <group scale={[3.5, 3.5, 3.5]}>\r\n        <group ref={cross} position={[0, 0, -300]} name=\"cross\">\r\n          <mesh renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[20, 2, 2]} />\r\n          </mesh>\r\n          <mesh renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[2, 20, 2]} />\r\n          </mesh>\r\n        </group>\r\n        <group ref={target} position={[0, 0, -300]} name=\"target\">\r\n          <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\r\n          </mesh>\r\n          <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\r\n          </mesh>\r\n          <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\r\n          </mesh>\r\n          <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\r\n          </mesh>\r\n        </group>\r\n        <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\r\n        <group ref={laserGroup}>\r\n          {lasers.map((t, i) => (\r\n            <group key={i}>\r\n              <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\r\n              <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\r\n            </group>\r\n          ))}\r\n        </group>\r\n        <group rotation={[Math.PI / 2, Math.PI, 0]}>\r\n          <mesh name=\"Renault_(S,_T1)_0\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\r\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\r\n          </mesh>\r\n          <mesh name=\"Renault_(S,_T1)_1\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\r\n            <meshStandardMaterial attach=\"material\" color=\"black\" />\r\n          </mesh>\r\n          <mesh name=\"Renault_(S,_T1)_2\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\r\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\r\n          </mesh>\r\n          <mesh name=\"Renault_(S,_T1)_3\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\r\n            <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\r\n          </mesh>\r\n          <mesh name=\"Renault_(S,_T1)_4\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\r\n            <meshBasicMaterial attach=\"material\" color=\"white\" />\r\n          </mesh>\r\n          <mesh name=\"Renault_(S,_T1)_5\">\r\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\r\n            <meshBasicMaterial attach=\"material\" color=\"teal\" />\r\n          </mesh>\r\n        </group>\r\n      </group>\r\n      {/* <mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\r\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[1.5, 0]} />\r\n        <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\r\n      </mesh> */}\r\n    </group>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { useThree, useFrame } from 'react-three-fiber'\r\nimport useStore from '../store'\r\n\r\nlet offset = 0\r\nexport default function Rig({ children }) {\r\n  const group = useRef()\r\n  const rig = useRef()\r\n  const mutation = useStore(state => state.mutation)\r\n  const { fov, scale, binormal, normal, track, mouse } = mutation\r\n  const { camera } = useThree()\r\n\r\n  useFrame(() => {\r\n    const t = mutation.t\r\n    const pos = mutation.position.clone()\r\n    const segments = track.tangents.length\r\n    const pickt = t * segments\r\n    const pick = Math.floor(pickt)\r\n    const pickNext = (pick + 1) % segments\r\n    binormal.subVectors(track.binormals[pickNext], track.binormals[pick])\r\n    binormal.multiplyScalar(pickt - pick).add(track.binormals[pick])\r\n    const dir = track.parameters.path.getTangentAt(t)\r\n    offset += (Math.max(15, 15 + -mouse.y / 20) - offset) * 0.05\r\n    normal.copy(binormal).cross(dir)\r\n    pos.add(normal.clone().multiplyScalar(offset))\r\n    camera.position.copy(pos)\r\n    const lookAt = track.parameters.path.getPointAt((t + 30 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\r\n    camera.matrix.lookAt(camera.position, lookAt, normal)\r\n    camera.quaternion.setFromRotationMatrix(camera.matrix)\r\n    camera.fov += ((fov) - camera.fov) * 0.05\r\n    camera.updateProjectionMatrix()\r\n    const lightPos = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\r\n    group.current.position.copy(lightPos)\r\n    group.current.quaternion.setFromRotationMatrix(camera.matrix)\r\n  })\r\n\r\n  return (\r\n    <group ref={group}>\r\n      <pointLight distance={400} position={[0, 100, -420]} intensity={5} color=\"indianred\" />\r\n      <group ref={rig} position={[0, 0, -50]}>\r\n        {children}\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useMemo, useRef, useEffect } from 'react'\r\nimport styled, { css, createGlobalStyle } from 'styled-components'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport useStore from './store'\r\n\r\nexport default function Hud() {\r\n  const points = useStore(state => state.points)\r\n  const health = useStore(state => state.health)\r\n  const sound = useStore(state => state.sound)\r\n  const toggle = useStore(state => state.actions.toggleSound)\r\n  const anim = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n  })\r\n\r\n  // const seconds = useRef()\r\n  // useEffect(() => {\r\n  //   const t = Date.now()\r\n  //   const i = setInterval(() => (seconds.current.innerText = ((Date.now() - t) / 1000).toFixed(1)), 100)\r\n  //   return () => clearInterval(i)\r\n  // }, [])\r\n\r\n  const score = useMemo(() => (points >= 1000 ? (points / 1000).toFixed(1) + 'K' : points), [points])\r\n  return (\r\n    <>\r\n      <UpperRight onClick={() => toggle()}>\r\n        sound\r\n        <br />\r\n        {sound ? 'off' : 'on'}\r\n      </UpperRight>\r\n      <UpperRight>\r\n        {/* <a href=\"https://codesandbox.io/s/react-three-fiber-untitled-game-4pp5r\">source</a>\r\n        <br />\r\n        <a href=\"https://twitter.com/0xca0a\">twitter</a>\r\n        <br />\r\n        <a href=\"https://github.com/react-spring/react-three-fiber\">github</a> */}\r\n      </UpperRight>\r\n      <LowerLeft>\r\n        {/* <h2 ref={seconds}>\r\n          0.0\r\n        </h2> */}\r\n        <h1>Skor: {score}</h1>\r\n      </LowerLeft>\r\n      <Global />\r\n      <LowerRight>\r\n        {health > 0 &&\r\n          <>\r\n            <div style={{ width: health + '%' }} />\r\n          </>\r\n        }\r\n      </LowerRight>\r\n      {health <= 0 &&\r\n        <>\r\n          {/* TODO: buat HTML Game Over */}\r\n          <animated.div style={anim}>\r\n            <Gameover>\r\n              Game Over\r\n            </Gameover>\r\n          </animated.div>\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst base = css`\r\n  font-family: 'Teko', sans-serif;\r\n  position: absolute;\r\n  text-transform: uppercase;\r\n  font-weight: 900;\r\n  font-variant-numeric: slashed-zero tabular-nums;\r\n  line-height: 1em;\r\n  pointer-events: none;\r\n  color: indianred;\r\n`\r\n\r\nconst Gameover = styled.div`\r\n  font-family: 'Teko', sans-serif;\r\n  position: absolute;\r\n  text-transform: uppercase;\r\n  font-weight: 900;\r\n  font-variant-numeric: slashed-zero tabular-nums;\r\n  line-height: 1em;\r\n  color: indianred;\r\n  top: 40px;\r\n  left: 450px;\r\n  font-size: 14em;\r\n`\r\n\r\nconst UpperLeft = styled.div`\r\n  ${base}\r\n  top: 40px;\r\n  left: 50px;\r\n  font-size: 2em;\r\n  transform: skew(5deg, 10deg);\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n  @media only screen and (max-width: 900px) {\r\n    font-size: 1.5em;\r\n  }\r\n`\r\n\r\nconst UpperRight = styled.div`\r\n  ${base}\r\n  text-align: right;\r\n  top: 40px;\r\n  right: 50px;\r\n  font-size: 2em;\r\n  transform: skew(-5deg, -10deg);\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n  & > a {\r\n    color: indianred;\r\n    text-decoration: none;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    font-size: 1.5em;\r\n  }\r\n`\r\n\r\nconst LowerLeft = styled.span`\r\n  ${base}\r\n  top: 50px;\r\n  left: 50px;\r\n  width: 500px;\r\n  display: inline-block;\r\n  & > h1 {\r\n    margin: 0;\r\n    font-size: 3em;\r\n    line-height: 1em;\r\n  }\r\n  & > h2 {\r\n    margin: 0;\r\n    font-size: 2em;\r\n    line-height: 1em;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    bottom: 30px;\r\n    & > h1 {\r\n      font-size: 1em !important;\r\n    }\r\n    & > h2 {\r\n      font-size: 0.5em !important;\r\n    }\r\n  }\r\n`\r\n\r\nconst test = styled.span`\r\n  ${base}\r\n  top: 50px;\r\n  left: 500px;\r\n  width: 500px;\r\n  display: inline-block;\r\n  & > h1 {\r\n    margin: 0;\r\n    font-size: 3em;\r\n    line-height: 1em;\r\n  }\r\n  & > h2 {\r\n    margin: 0;\r\n    font-size: 2em;\r\n    line-height: 1em;\r\n  }\r\n  @media only screen and (max-width: 900px) {\r\n    bottom: 30px;\r\n    & > h1 {\r\n      font-size: 1em !important;\r\n    }\r\n    & > h2 {\r\n      font-size: 0.5em !important;\r\n    }\r\n  }\r\n`\r\n\r\nconst LowerRight = styled.div`\r\n  position: absolute;\r\n  pointer-events: none;\r\n  bottom: 70px;\r\n  right: 50px;\r\n  height: 40px;\r\n  width: 200px;\r\n  background: black;\r\n  & > div {\r\n    height: 100%;\r\n    background: rgb(90,255,98);\r\n    background: linear-gradient(-90deg, rgba(90,255,98,1) 0%, rgba(45,175,49,1) 100%);\r\n  }\r\n\r\n  @media only screen and (max-width: 900px) {\r\n    bottom: 50px;\r\n    height: 40px;\r\n    width: 150px;\r\n  }\r\n`\r\n\r\nconst Global = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html,\r\n  body,\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    user-select: none;\r\n    overflow: hidden;\r\n  }\r\n\r\n  #root {\r\n    overflow: auto;\r\n    padding: 0px;\r\n  }\r\n\r\n  body {\r\n    position: fixed;\r\n    overflow: hidden;\r\n    overscroll-behavior-y: none;\r\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\r\n    color: black;\r\n    background: white;\r\n  }\r\n`\r\n","import * as THREE from 'three'\r\nimport React, { Suspense } from 'react'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport Stars from './3d/Stars'\r\nimport Planets from './3d/Planets'\r\nimport Effects from './3d/Effects'\r\nimport Particles from './3d/Particles'\r\nimport Enemies from './3d/Enemies'\r\nimport Rocks from './3d/Rocks'\r\nimport Explosions from './3d/Explosions'\r\nimport Rings from './3d/Rings'\r\nimport Track from './3d/Track'\r\nimport Ship from './3d/Ship'\r\nimport Rig from './3d/Rig'\r\nimport Hud from './Hud'\r\nimport useStore from './store'\r\n\r\nexport default function Game() {\r\n  const { fov } = useStore(state => state.mutation)\r\n  const actions = useStore(state => state.actions)\r\n  return (\r\n    <>\r\n      <Canvas\r\n        concurrent\r\n        gl={{ antialias: false }}\r\n        onPointerMove={actions.updateMouse}\r\n        onClick={actions.shoot}\r\n        camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, fov }}\r\n        onCreated={({ gl, camera }) => {\r\n          actions.init(camera)\r\n          gl.gammaInput = true\r\n          gl.toneMapping = THREE.Uncharted2ToneMapping\r\n          gl.setClearColor(new THREE.Color('#020209'))\r\n        }}>\r\n        <fog attach=\"fog\" args={['#070710', 100, 700]} />\r\n        <ambientLight intensity={0.25} />\r\n        <Stars />\r\n        <Explosions />\r\n        {/* <Track /> */}\r\n        {/* <Particles /> */}\r\n        {/* <Rings /> */}\r\n        <Suspense fallback={null}>\r\n          <Rocks />\r\n          <Planets />\r\n          {/* <Enemies /> */}\r\n          <Rig>\r\n            <Ship />\r\n          </Rig>\r\n        </Suspense>\r\n        <Effects />\r\n      </Canvas>\r\n      <Hud />\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/corona.dc25ff6d.png\";","import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport logo from './images/corona.png'\r\nimport \"./Menu.css\";\r\nimport {Modal} from 'react-bootstrap';\r\n// import \"./assets/bootstrap/css/bootstrap.min.css\";\r\n// import \"./assets/theme/css/style.css\";\r\n// import \"./assets/mobirise/css/mbr-additional.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// TODO: Buat menu cokkkkk!\r\n\r\nclass Menu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            number : 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        this.setState({\r\n            number: this.state.number+1\r\n        })\r\n    }\r\n\r\n    openModal = () => this.setState({ isOpen: true });\r\n    closeModal = () => this.setState({ isOpen: false });\r\n\r\n    //render biasa\r\n    render(){\r\n\r\n      \r\n        return(           \r\n            <div>\r\n                <div class = \"container-fluid mt-4\">\r\n                    <div class = \"row align-items-center\">\r\n                        <div class=\"col-7 px-2 mx-0\">\r\n                            <img src={logo} class=\"float-start\" >\r\n                            </img>\r\n                        </div>\r\n                        <div class = \"col px-5\">\r\n                            <div class = \"row\">\r\n                                    <h1 class = \"mbr-section-title mbr-fonts-style mb-3 display-2\"><strong>COVID FIGHTER</strong></h1>\r\n                            </div>\r\n                            {/* <div class = \"row\">\r\n                                <div class = \"col-4\">\r\n                                <Link to=\"/Game\">\r\n                                <Button  variant=\"warning\" className=\"\" size=\"lg\">\r\n                                    {this.props.title}\r\n                                </Button>\r\n                                </Link>\r\n                                </div>\r\n\r\n                                <div class = \"col\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                                    Launch\r\n                                </button>\r\n                                </div>\r\n                            </div> */}\r\n                            <div class=\"mbr-section-btn mt-1 haha\">\r\n                                {/* <a class=\"btn btn-warning display-4\"> */}\r\n                                <Link to=\"/Game\">\r\n                                <Button  class=\"btn btn-warning display-4\" variant=\"warning\" size= \"lg\" className=\"\" >\r\n                                    {this.props.title}\r\n                                </Button>\r\n                                </Link>\r\n                                {/* </a> */}\r\n                                \r\n                            {/* <button type=\"button\" class=\"btn btn-primary-outline display-4 how-to\" size=\"lg\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" > */}\r\n                                {/* How To Play? */}\r\n                            {/* </button> */}\r\n                            \r\n                            <div\r\n                            className=\"btn btn-primary-outline display-4 how-to\"\r\n                            // style={{ height: \"100vh\" }}\r\n                            >\r\n                            <Button class = \"btn btn-primary-outline display-4 how-to\" onClick={this.openModal}>\r\n                                How To Play?\r\n                            </Button>\r\n                            </div>\r\n                            <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Modal heading</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                Close\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n\r\n                            \r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                \r\n                \r\n                {/* nope */}\r\n                    {/* <div class = \"tombol\"> */}\r\n                        {/* nope */}\r\n\r\n                        {/* <Button variant=\"secondary\" onClick={ ()=>this.increment() }> */}\r\n                            {/* {this.state.number} */}\r\n                        {/* </Button> */}\r\n                    {/* </div> */}\r\n                    \r\n               \r\n\r\n                \r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n    //react dom\r\n\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport Game from './Game';\r\n// import Menu2 from './Menu2'\r\nimport Menu from './Menu';\r\n// import index2 from './index2'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={\"/\"} component={()=><Menu title=\"Play Game !\"/>} />\r\n        {/* <Route exact path={\"/\"} component={()=><index2 title=\"Start Game\"/>} /> */}\r\n        {/* <Route exact path={\"/\"} component={()=><Menu2 />} /> */}\r\n        <Route exact path={\"/game\"} component={Game} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}